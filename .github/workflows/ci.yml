name: CI
on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DEFAULT_NODE_VERSION: 22.x
  DOCUMENTATION_BRANCH: feat/simplify-extension-ignores

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Ensure line endings are consistent
        run: git config --global core.autocrlf input
      - name: Use Node.js ${{ env.DEFAULT_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}
      - name: Enable Corepack
        run: corepack enable
      - name: Ensure line endings are consistent
        run: git config --global core.autocrlf input
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Load Yarn cache
        uses: actions/cache@v4
        with:
          path: |
            .yarn
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - name: Install project dependencies
        run: yarn install --immutable
      - name: Run linter
        run: yarn run lint

  test:
    name: Tests
    needs: lint
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node-version:
          - 18.x
          - 20.x
          - 22.x
    runs-on: ${{ matrix.os }}
    steps:
      - name: Ensure line endings are consistent
        run: git config --global core.autocrlf input
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Enable Corepack
        run: corepack enable
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Load Yarn cache
        uses: actions/cache@v4
        with:
          path: |
            .yarn
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - name: Install project dependencies
        run: yarn install --immutable
      - name: Compile TypeScript
        run: yarn run build:ts
      - name: Generate Components.js definitions
        run: yarn run build:components
      - name: Generate engine bundles
        run: yarn run build:engines
      - name: Run combined unit and system tests
        run: yarn run test:node
      - name: Submit coverage results
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.github_token }}
          flag-name: run-${{ matrix.node-version }}
          parallel: true

  spectest:
    name: Specification tests
    needs: lint
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node-version:
          - 18.x
          - 20.x
          - 22.x
    runs-on: ${{ matrix.os }}
    steps:
      - name: Ensure line endings are consistent
        run: git config --global core.autocrlf input
      - name: Use Node.js ${{ matrix.node-version }}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Enable Corepack
        run: corepack enable
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Load Yarn cache
        uses: actions/cache@v4
        with:
          path: |
            .yarn
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - name: Load RDF test suite cache
        uses: actions/cache@v4
        with:
          path: |
            .rdf-test-suite-cache
            .rdf-test-suite-ldf-cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - name: Install project dependencies
        run: yarn install --immutable
      - name: Compile TypeScript
        run: yarn run build:ts
      - name: Generate Components.js definitions
        run: yarn run build:components
      - name: Generate engine bundles
        run: yarn run build:engines
      - name: Run spec tests
        run: yarn run test:spec
      - name: Run integration tests
        run: yarn run test:integration

  browsertest:
    name: Browser tests
    needs: lint
    strategy:
      matrix:
        browser:
          - Chrome
          - Firefox
          - Webkit
    runs-on: ubuntu-latest
    steps:
      - name: Ensure line endings are consistent
        run: git config --global core.autocrlf input
      - name: Use Node.js ${{ env.DEFAULT_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}
      - name: Enable Corepack
        run: corepack enable
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Load Yarn cache
        uses: actions/cache@v4
        with:
          path: |
            .yarn
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - name: Install project dependencies
        run: yarn install --immutable
      - name: Install ${{ matrix.browser }} via Playwright
        if: startsWith(matrix.browser, 'Webkit')
        # The @L will convert 'Webkit' into lowercase 'webkit' which is the name Playwright expects.
        run: yarn playwright install --with-deps ${BROWSER_NAME@L}
        env:
          BROWSER_NAME: ${{ matrix.browser }}
      - name: Compile TypeScript
        run: yarn run build:ts
      - name: Generate Components.js definitions
        run: yarn run build:components
      - name: Generate engine bundles
        run: yarn run build:engines
      - name: Run browser tests
        # The tests will run on 'WebkitHeadless', 'FirefoxHeadless' and 'ChromeHeadless'
        run: yarn run test:browser --browsers ${{ matrix.browser }}Headless

  depcheck:
    name: Depcheck
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Ensure line endings are consistent
        run: git config --global core.autocrlf input
      - name: Use Node.js ${{ env.DEFAULT_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}
      - name: Enable Corepack
        run: corepack enable
      - name: Ensure line endings are consistent
        run: git config --global core.autocrlf input
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Load Yarn cache
        uses: actions/cache@v4
        with:
          path: |
            .yarn
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - name: Install project dependencies
        run: yarn install --immutable
      - name: Compile TypeScript so depcheck will work as intended
        run: yarn run build:ts
      - name: Run depcheck
        run: yarn run depcheck

  docs:
    name: Documentation
    needs: lint
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Ensure line endings are consistent
        run: git config --global core.autocrlf input
      - name: Use Node.js ${{ env.DEFAULT_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}
      - name: Enable Corepack
        run: corepack enable
      - name: Ensure line endings are consistent
        run: git config --global core.autocrlf input
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Load Yarn cache
        uses: actions/cache@v4
        with:
          path: |
            .yarn
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - name: Install project dependencies
        run: yarn install --immutable
      - name: Build documentation
        run: yarn run doc
      - name: Prepare artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: documentation
          name: documentation
      - name: Deploy to GitHub Pages
        # The documentation is only published for master branch
        if: startsWith(github.ref, 'refs/heads/master')
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: documentation

  coveralls:
    name: Coveralls
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Consolidate test coverage from different jobs
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true

  dockerimages:
    name: Docker images
    needs:
      - test
      - spectest
      - browsertest
    env:
      # TODO: Use the same version as other steps when lerna-docker works with it
      DEFAULT_NODE_VERSION: 18.x
    runs-on: ubuntu-latest
    steps:
      - name: Ensure line endings are consistent
        run: git config --global core.autocrlf input
      - name: Use Node.js ${{ env.DEFAULT_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}
      - name: Enable Corepack
        run: corepack enable
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Load Yarn cache
        uses: actions/cache@v4
        with:
          path: |
            .yarn
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        run: yarn install --immutable
      - name: Install Lerna Docker
        run: sh -c "`curl -fsSl https://raw.githubusercontent.com/rubensworks/lerna-docker/master/install.sh`"
      - name: Compile TypeScript
        run: yarn run build:ts
      - name: Generate Components.js definitions
        run: yarn run build:components
      - name: Generate engine bundles
        run: yarn run build:engines
      - name: Build Docker images
        run: ~/.lerna-docker/bin/lerna-docker comunica build
      - name: Deploy Docker images
        if: startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/tags/')
        run: ~/.lerna-docker/bin/lerna-docker comunica push
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Deploy Docker images (next/major)
        if: startsWith(github.ref, 'refs/heads/next')
        run: ~/.lerna-docker/bin/lerna-docker comunica push next
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  browserbuilds:
    name: Browser builds
    needs:
      - test
      - spectest
      - browsertest
    runs-on: ubuntu-latest
    steps:
      - name: Ensure line endings are consistent
        run: git config --global core.autocrlf input
      - name: Use Node.js ${{ env.DEFAULT_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}
      - name: Enable Corepack
        run: corepack enable
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Load Yarn cache
        uses: actions/cache@v4
        with:
          path: |
            .yarn
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        run: yarn install --immutable
      - name: Compile TypeScript
        run: yarn run build:ts
      - name: Generate Components.js definitions
        run: yarn run build:components
      - name: Generate engine bundles
        run: yarn run build:engines
      - name: Generate browser bundles
        run: yarn run build:engines-browser
      - name: Deploy browser builds
        if: startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/tags/')
        run: ./.github/deploy_browser.sh
        env:
          GH_TOKEN: ${{ secrets.PAT }}

  performance:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        benchmark:
          - watdiv-file
          - watdiv-tpf
          - bsbm-file
          - bsbm-tpf
          - web
    needs: lint
    if: startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/feature') || startsWith(github.ref, 'refs/heads/next')
    steps:
      - name: Ensure line endings are consistent
        run: git config --global core.autocrlf input
      - name: Use Node.js ${{ env.DEFAULT_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}
      - name: Enable Corepack
        run: corepack enable
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Load Yarn cache
        uses: actions/cache@v4
        with:
          path: |
            .yarn
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        run: yarn install --immutable
      - name: Compile TypeScript
        run: yarn run build:ts
      - name: Generate Components.js definitions
        run: yarn run build:components
      - name: Generate engine bundles
        run: yarn run build:engines
      - name: Run benchmarks
        run: cd performance/benchmark-${{ matrix.benchmark }}/ && yarn run performance:ci
      - uses: actions/upload-artifact@v4
        with:
          name: performance-benchmark-${{ matrix.benchmark }}
          path: performance/benchmark-${{ matrix.benchmark }}/combinations/combination_0/output/
      - name: Print raw output
        run: cat performance/benchmark-${{ matrix.benchmark }}/combinations/combination_0/output/query-times.csv

  performance-analysis:
    name: Performance analysis
    needs:
      - test
      - spectest
      - browsertest
      - performance
    runs-on: ubuntu-latest
    steps:
      - name: Ensure line endings are consistent
        run: git config --global core.autocrlf input
      - name: Use Node.js ${{ env.DEFAULT_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}
      - name: Enable Corepack
        run: corepack enable
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Load Yarn cache
        uses: actions/cache@v4
        with:
          path: |
            .yarn
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        run: yarn install --immutable
      - uses: actions/download-artifact@v4
        with:
          name: performance-benchmark-watdiv-file
          path: performance/benchmark-watdiv-file/combinations/combination_0/output/
      - uses: actions/download-artifact@v4
        with:
          name: performance-benchmark-watdiv-tpf
          path: performance/benchmark-watdiv-tpf/combinations/combination_0/output/
      - uses: actions/download-artifact@v4
        with:
          name: performance-benchmark-bsbm-file
          path: performance/benchmark-bsbm-file/combinations/combination_0/output/
      - uses: actions/download-artifact@v4
        with:
          name: performance-benchmark-bsbm-tpf
          path: performance/benchmark-bsbm-tpf/combinations/combination_0/output/
      - uses: actions/download-artifact@v4
        with:
          name: performance-benchmark-web
          path: performance/benchmark-web/combinations/combination_0/output/
      - name: Process benchmark detailed results
        run: yarn psbr csv ghbench performance/benchmark-watdiv-file/combinations/combination_0/output/ performance/benchmark-watdiv-tpf/combinations/combination_0/output/ performance/benchmark-bsbm-file/combinations/combination_0/output/ performance/benchmark-bsbm-tpf/combinations/combination_0/output/ performance/benchmark-web/combinations/combination_0/output/ --overrideCombinationLabels WatDiv-File,WatDiv-TPF,BSBM-File,BSBM-TPF,Web --total false --detailed true --name ghbench-detail.json
      - name: Process benchmark total results
        run: yarn psbr csv ghbench performance/benchmark-watdiv-file/combinations/combination_0/output/ performance/benchmark-watdiv-tpf/combinations/combination_0/output/ performance/benchmark-bsbm-file/combinations/combination_0/output/ performance/benchmark-bsbm-tpf/combinations/combination_0/output/ performance/benchmark-web/combinations/combination_0/output/ --overrideCombinationLabels WatDiv-File,WatDiv-TPF,BSBM-File,BSBM-TPF,Web --total true --detailed false --name ghbench-total.json
      - name: Determine benchmark detailed results target directory name
        run: echo "BENCHMARK_DATA_DIR_PATH_DETAIL=comunica/${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}/benchmarks-detail" >> $GITHUB_ENV
      - name: Determine benchmarks total results target directory name
        run: echo "BENCHMARK_DATA_DIR_PATH_TOTAL=comunica/${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}/benchmarks-total" >> $GITHUB_ENV
      - name: Finalize benchmarks detailed results
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Benchmarks detailed results
          tool: customSmallerIsBetter
          output-file-path: ghbench-detail.json
          github-token: ${{ secrets.PAT }}
          auto-push: true
          alert-comment-cc-users: '@rubensworks'
          gh-repository: github.com/comunica/comunica-performance-results
          gh-pages-branch: master
          benchmark-data-dir-path: ${{ env.BENCHMARK_DATA_DIR_PATH_DETAIL }}
      - name: Cleanup benchmark-action data
        run: rm -rf ./benchmark-data-repository
      - name: Finalize benchmarks total results
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Benchmarks total results
          tool: customSmallerIsBetter
          output-file-path: ghbench-total.json
          github-token: ${{ secrets.PAT }}
          auto-push: true
          alert-threshold: '150%'
          comment-always: true
          comment-on-alert: true
          alert-comment-cc-users: '@rubensworks'
          summary-always: true
          gh-repository: github.com/comunica/comunica-performance-results
          gh-pages-branch: master
          benchmark-data-dir-path: ${{ env.BENCHMARK_DATA_DIR_PATH_TOTAL }}
      - name: Prepare comment on commit with link to performance results
        run: echo -e "Performance benchmarks succeeded! 🚀\n\n\[[Summarized results](https://comunica.github.io/comunica-performance-results/comunica/${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}/benchmarks-total/)\] \[[Detailed results](https://comunica.github.io/comunica-performance-results/comunica/${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}/benchmarks-detail/)\]" > ./commit-comment-body.txt
      - name: Comment on commit with link to performance results
        uses: peter-evans/commit-comment@v3
        with:
          body-path: ./commit-comment-body.txt
