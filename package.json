{
  "private": true,
  "repository": "https://github.com/comunica/comunica/",
  "workspaces": [
    "engines/*",
    "packages/*"
  ],
  "devDependencies": {
    "@babel/core": "^7.20.2",
    "@babel/preset-env": "^7.20.2",
    "@inrupt/solid-client-authn-core": "^1.12.2",
    "@inrupt/solid-client-authn-node": "^1.12.2",
    "@pollyjs/adapter-node-http": "^6.0.5",
    "@pollyjs/core": "^6.0.5",
    "@pollyjs/persister-fs": "^6.0.5",
    "@solid/community-server": "^5.1.0",
    "@rubensworks/eslint-config": "^2.0.0",
    "@strictsoftware/typedoc-plugin-monorepo": "^0.4.2",
    "@types/jest": "^29.4.0",
    "@types/node": "^18.14.6",
    "@types/object-inspect": "^1.8.1",
    "@types/readable-stream": "^2.3.15",
    "@types/setup-polly-jest": "^0.5.2",
    "abort-controller": "^3.0.0",
    "arrayify-stream": "^2.0.1",
    "asynciterator": "^3.8.0",
    "babel-loader": "^9.1.0",
    "componentsjs-generator": "^3.1.0",
    "depcheck": "^1.4.3",
    "eslint": "^8.27.0",
    "jest": "^29.5.0",
    "jest-mock": "^29.3.1",
    "jest-rdf": "^1.7.1",
    "karma": "^6.4.1",
    "karma-chrome-launcher": "^3.1.1",
    "karma-firefox-launcher": "^2.1.2",
    "karma-jasmine": "^5.1.0",
    "karma-jasmine-html-reporter": "^2.0.0",
    "karma-sourcemap-loader": "^0.4.0",
    "karma-webpack": "^5.0.0",
    "lerna": "^6.0.3",
    "lerna-script": "^1.4.0",
    "manual-git-changelog": "^1.0.2",
    "memory-streams": "^0.1.3",
    "node-polyfill-webpack-plugin": "^2.0.1",
    "nodemon": "^2.0.20",
    "npm-check-updates": "^16.4.1",
    "pre-commit": "^1.2.2",
    "rdf-data-factory": "^1.1.1",
    "rdf-quad": "^1.5.0",
    "rdf-test-suite": "^1.23.1",
    "rdf-test-suite-ldf": "^1.4.2",
    "setup-polly-jest": "^0.11.0",
    "sparqlalgebrajs": "^4.0.5",
    "stream-to-string": "^1.2.0",
    "streamify-array": "^1.0.1",
    "streamify-string": "^1.0.1",
    "ts-jest": "^29.0.5",
    "ts-loader": "^9.4.1",
    "typedoc": "^0.21.0",
    "typescript": "^4.9.3",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.0"
  },
  "pre-commit": [
    "build",
    "lint",
    "test"
  ],
  "scripts": {
    "test-changed": "lerna run test --since HEAD",
    "build-changed": "lerna run build --since HEAD",
    "test": "jest",
    "test:ci": "jest --ci --maxWorkers=4 --coverage",
    "test:browser": "karma start karma.config.js --single-run",
    "lint": "eslint . --ext .ts --cache",
    "lint-fix": "eslint . --ext .ts --fix",
    "build": "npm run build:ts && npm run build:components",
    "build:ts": "tsc",
    "build:components": "componentsjs-generator engines/* packages/*",
    "build-watch": "nodemon -e ts --ignore '*.d.ts' --exec yarn run build",
    "build-watch:ts": "tsc --watch",
    "build-watch:components": "nodemon -e d.ts --exec yarn run build:components",
    "publish": "yarn run build",
    "publish-release": "lerna publish",
    "publish-bare": "lerna exec -- npm publish --silent",
    "publish-canary": "yarn run build && lerna version prerelease --preid alpha.$(.github/get-next-alpha-version.sh) --exact --ignore-scripts --force-publish --no-push --no-git-tag-version --yes && git update-index --assume-unchanged $(git ls-files | tr '\\n' ' ') && lerna publish from-package --no-git-reset --pre-dist-tag next --force-publish --no-push --no-git-tag-version --yes && git update-index --no-assume-unchanged $(git ls-files | tr '\\n' ' ') && git checkout .",
    "doc": "typedoc",
    "temp:remove_add_broken_node_18_dependencies": "if [ $( node -v | sed -r \"s/v([0-9]+).*/\\1/g\" ) = 18 ]; then yarn remove -W --ignore-scripts --ignore-engines @inrupt/solid-client-authn-core @inrupt/solid-client-authn-node @solid/community-server 2> /dev/null; fi",
    "preinstall": "npm run temp:remove_add_broken_node_18_dependencies; node -e \"if (!fs.existsSync('packages/runner-cli/bin/run.js')) { var os = fs.createWriteStream('packages/runner-cli/bin/run.js'); os.write('#!/usr/bin/env node\\nconsole.error(\\'Temporary runner script during lerna installation. If you see this, please run yarn install again.\\');\\nprocess.exit(1);'); os.end(); }\" && node -e \"if (!fs.existsSync('packages/runner/bin/compile-config.js')) { var os = fs.createWriteStream('packages/runner/bin/compile-config.js'); os.write('#!/usr/bin/env node\\nconsole.error(\\'Temporary compile-config script during lerna installation. If you see this, please run yarn install again.\\');\\nprocess.exit(1);'); os.end(); }\"",
    "postinstall": "yarn run build && lerna run prepare",
    "version": "manual-git-changelog onversion",
    "depcheck": "lerna-script depcheckTask",
    "depcheck:fix": "lerna-script depfixTask",
    "ncu:all": "lerna-script updateTask",
    "ncu:major:all": "lerna-script updateTaskMajor"
  },
  "resolutions": {
    "@rdfjs/types": "1.1.0",
    "typescript": "4.7.4"
  }
}
