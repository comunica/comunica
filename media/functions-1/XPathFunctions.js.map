{"version":3,"file":"XPathFunctions.js","sourceRoot":"","sources":["XPathFunctions.ts"],"names":[],"mappings":";;;AAAA,sDAAsD;AACtD,+CAA+C;AAC/C,SAAgB,OAAO,CAAC,IAAY,EAAE,OAAe,EAAE,KAAc;IACnE,2DAA2D;IAC3D,mDAAmD;IACnD,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACvC,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxB,CAAC;AALD,0BAKC;AAED,kBAAkB;AAClB,sDAAsD;AACtD,SAAgB,OAAO,CAAC,GAAW,EAAE,OAAe,EAAE,WAAmB,EAAE,KAAc;IACvF,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACrC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QAChB,MAAM,MAAM,GAAG,KAAK,IAAI,EAAE,CAAC;QAC3B,GAAG,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC;IAC1C,CAAC;IACD,OAAO,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;AACvC,CAAC;AAPD,0BAOC;AAED,8BAA8B;AAC9B,2BAA2B;AAC3B,uCAAuC;AACvC,yDAAyD;AACzD,SAAgB,WAAW,CAAC,GAAW,EAAE,KAAa;IACpD,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAChC,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEnC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5B,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,EAAE,GAAG,CAAC,CAAC;IACX,IAAI,EAAE,GAAG,CAAC,CAAC;IACX,OAAO,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC;QAC7B,IAAI,WAAW,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;YAC/B,EAAE,EAAE,CAAC;YACL,SAAS;QACX,CAAC;QACD,IAAI,EAAE,KAAK,QAAQ,CAAC,MAAM,EAAE,CAAC;YAC3B,OAAO,KAAK,CAAC;QACf,CAAC;QACD,IAAI,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;YAC/C,EAAE,EAAE,CAAC;YACL,EAAE,EAAE,CAAC;YACL,SAAS;QACX,CAAC;QACD,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC9B,OAAO,KAAK,CAAC;QACf,CAAC;QACD,EAAE,EAAE,CAAC;IACP,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AA9BD,kCA8BC;AAED,SAAS,WAAW,CAAC,GAAW;IAC9B,OAAO,GAAG,KAAK,GAAG,CAAC;AACrB,CAAC;AAED,SAAS,aAAa,CAAC,IAAY,EAAE,KAAa;IAChD,MAAM,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,IAAI,GAAG,EAAE,IAAI,CAAC,CAAC;IACnD,OAAO,YAAY,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;AACzC,CAAC","sourcesContent":["// https://www.w3.org/TR/xpath-functions/#func-matches\n// https://www.w3.org/TR/xpath-functions/#flags\nexport function matches(text: string, pattern: string, flags?: string): boolean {\n  // TODO: Only flags 'i' and 'm' match between XPath and JS.\n  // 's', 'x', 'q', would need proper implementation.\n  const reg = new RegExp(pattern, flags);\n  return reg.test(text);\n}\n\n// TODO: Fix flags\n// https://www.w3.org/TR/xpath-functions/#func-replace\nexport function replace(arg: string, pattern: string, replacement: string, flags?: string): string {\n  let reg = new RegExp(pattern, flags);\n  if (!reg.global) {\n    const flags_ = flags ?? '';\n    reg = new RegExp(pattern, `${flags_}g`);\n  }\n  return arg.replace(reg, replacement);\n}\n\n// TODO: Not an XPath function\n// TODO: Publish as package\n// https://www.ietf.org/rfc/rfc4647.txt\n// https://www.w3.org/TR/sparql11-query/#func-langMatches\nexport function langMatches(tag: string, range: string): boolean {\n  const langTags = tag.split('-');\n  const rangeTags = range.split('-');\n\n  if (!_matchLangTag(rangeTags[0], langTags[0]) &&\n    !_isWildCard(langTags[0])) {\n    return false;\n  }\n\n  let lI = 1;\n  let rI = 1;\n  while (rI < rangeTags.length) {\n    if (_isWildCard(rangeTags[rI])) {\n      rI++;\n      continue;\n    }\n    if (lI === langTags.length) {\n      return false;\n    }\n    if (_matchLangTag(rangeTags[rI], langTags[lI])) {\n      lI++;\n      rI++;\n      continue;\n    }\n    if (langTags[lI].length === 1) {\n      return false;\n    }\n    lI++;\n  }\n  return true;\n}\n\nfunction _isWildCard(tag: string): boolean {\n  return tag === '*';\n}\n\nfunction _matchLangTag(left: string, right: string): boolean {\n  const matchInitial = new RegExp(`/${left}/`, 'iu');\n  return matchInitial.test(`/${right}/`);\n}\n"]}