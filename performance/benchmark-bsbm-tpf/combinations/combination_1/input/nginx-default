# Cache setup
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=fragments-cache:100m max_size=50000m inactive=600m;
#proxy_temp_path /tmp/nginx;

upstream fragments-node {
    server ldfserver:3000;
}

server {
    listen 80 default_server;
    server_name _;

    if ($request_method !~ ^(GET|HEAD|OPTIONS)$) {
        return 405;
    }

    # Google site verification
    location ~ ^/(google[a-z0-9]*\.html)$ {
        alias /www/$1;
    }

    location /assets/ {
        proxy_pass http://fragments-node$request_uri;
        proxy_pass_header Server;

        expires 3w;

        proxy_cache fragments-cache;
        proxy_cache_key "$request_uri";
        proxy_cache_valid 200 404 60m;
        proxy_cache_bypass $arg_nocache $http_pragma;
    }

    location /logs {
        alias /data/log/nginx/public;
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;
    }

    location / {
        # Limit rate to 1MB/s
        limit_rate 1024k;

        proxy_pass http://fragments-node$request_uri;
        proxy_set_header Host $http_host;
        proxy_pass_header Server;
        proxy_read_timeout 6000s;

        expires 7d;

        proxy_cache fragments-cache;
        proxy_cache_key "$request_uri $http_accept";
        proxy_cache_valid 200 302 404 60m;
        proxy_cache_bypass $arg_nocache $http_pragma;
    }
}
