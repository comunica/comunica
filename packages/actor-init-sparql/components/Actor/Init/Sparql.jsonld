{
  "@context": [
    "https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/components/context.jsonld",
    "https://linkedsoftwaredependencies.org/bundles/npm/@comunica/logger-void/^1.0.0/components/context.jsonld",
    "https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-init/^1.0.0/components/context.jsonld"
  ],
  "@id": "npmd:@comunica/actor-init-sparql",
  "components": [
    {
      "@id": "cais:Actor/Init/Sparql",
      "@type": "Class",
      "extends": "cbi:Actor/Init",
      "requireElement": "ActorInitSparql",
      "comment": "A comunica SPARQL Init Actor.",
      "parameters": [
        {
          "@id": "cais:mediatorOptimizeQueryOperation",
          "comment": "The query operation optimize mediator",
          "required": true,
          "unique": true
        },
        {
          "@id": "cais:mediatorQueryOperation",
          "comment": "The query operation mediator",
          "required": true,
          "unique": true
        },
        {
          "@id": "cais:mediatorSparqlParse",
          "comment": "The query parse mediator",
          "required": true,
          "unique": true
        },
        {
          "@id": "cais:mediatorSparqlSerialize",
          "comment": "The query serialize mediator",
          "required": true,
          "unique": true
        },
        {
          "@id": "cais:mediatorSparqlSerializeMediaTypeCombiner",
          "comment": "The query serialize media type combinator",
          "required": true,
          "unique": true
        },
        {
          "@id": "cais:mediatorSparqlSerializeMediaTypeFormatCombiner",
          "comment": "The query serialize media type format combinator",
          "required": true,
          "unique": true
        },
        {
          "@id": "cais:mediatorContextPreprocess",
          "comment": "The context processing combinator",
          "required": true,
          "unique": true
        },
        {
          "@id": "cais:mediatorHttpInvalidate",
          "comment": "The HTTP cache invalidation mediator",
          "required": true,
          "unique": true
        },
        {
          "@id": "cais:logger",
          "comment": "The logger of this actor.",
          "range": "cc:Logger",
          "default": { "@type": "LoggerVoid" },
          "required": true,
          "unique": true
        },
        {
          "@id": "cais:query",
          "comment": "A SPARQL query string",
          "unique": true
        },
        {
          "@id": "cais:defaultQueryInputFormat",
          "comment": "The default query input format",
          "unique": true
        },
        {
          "@id": "cais:context",
          "comment": "A JSON string of a query operation context",
          "unique": true
        },
        {
          "@id": "cais:contextKeyShortcut",
          "comment": "A context key shortcut entry",
          "range": {
            "@type": "cais:contextKeyShortcut/Entry",
            "parameters": [
              {
                "@id": "cais:contextKeyShortcut/shortcut",
                "comment": "A shortcut string",
                "required": true,
                "unique": true
              },
              {
                "@id": "cais:contextKeyShortcut/expanded",
                "comment": "The full expanded key",
                "required": true,
                "unique": true
              }
            ]
          },
          "default": [
            { "contextShortcutKey": "source",                 "contextShortcutValue": "@comunica/bus-rdf-resolve-quad-pattern:source"  },
            { "contextShortcutKey": "sources",                "contextShortcutValue": "@comunica/bus-rdf-resolve-quad-pattern:sources" },
            { "contextShortcutKey": "initialBindings",        "contextShortcutValue": "@comunica/actor-init-sparql:initialBindings"    },
            { "contextShortcutKey": "queryFormat",            "contextShortcutValue": "@comunica/actor-init-sparql:queryFormat"        },
            { "contextShortcutKey": "baseIRI",                "contextShortcutValue": "@comunica/actor-init-sparql:baseIRI"            },
            { "contextShortcutKey": "log",                    "contextShortcutValue": "@comunica/core:log"                             },
            { "contextShortcutKey": "datetime",               "contextShortcutValue": "@comunica/actor-http-memento:datetime"          },
            { "contextShortcutKey": "queryTimestamp",         "contextShortcutValue": "@comunica/actor-init-sparql:queryTimestamp"     },
            { "contextShortcutKey": "httpProxyHandler",       "contextShortcutValue": "@comunica/actor-http-proxy:httpProxyHandler"    },
            { "contextShortcutKey": "lenient",                "contextShortcutValue": "@comunica/actor-init-sparql:lenient"            },
            { "contextShortcutKey": "httpIncludeCredentials", "contextShortcutValue": "@comunica/bus-http:include-credentials"         },
            { "contextShortcutKey": "httpAuth",               "contextShortcutValue": "@comunica/bus-http:auth"                        }
          ]
        }
      ],
      "constructorArguments": [
        {
          "extends": "cbi:Actor/Init/constructorArgumentsObject",
          "fields": [
            {
              "keyRaw": "mediatorOptimizeQueryOperation",
              "value": "cais:mediatorOptimizeQueryOperation"
            },
            {
              "keyRaw": "mediatorQueryOperation",
              "value": "cais:mediatorQueryOperation"
            },
            {
              "keyRaw": "mediatorSparqlParse",
              "value": "cais:mediatorSparqlParse"
            },
            {
              "keyRaw": "mediatorSparqlSerialize",
              "value": "cais:mediatorSparqlSerialize"
            },
            {
              "keyRaw": "mediatorSparqlSerializeMediaTypeCombiner",
              "value": "cais:mediatorSparqlSerializeMediaTypeCombiner"
            },
            {
              "keyRaw": "mediatorSparqlSerializeMediaTypeFormatCombiner",
              "value": "cais:mediatorSparqlSerializeMediaTypeFormatCombiner"
            },
            {
              "keyRaw": "mediatorContextPreprocess",
              "value": "cais:mediatorContextPreprocess"
            },
            {
              "keyRaw": "mediatorHttpInvalidate",
              "value": "cais:mediatorHttpInvalidate"
            },
            {
              "keyRaw": "logger",
              "value": "cais:logger"
            },
            {
              "keyRaw": "queryString",
              "value": "cais:query"
            },
            {
              "keyRaw": "defaultQueryInputFormat",
              "value": "cais:defaultQueryInputFormat"
            },
            {
              "keyRaw": "context",
              "value": "cais:context"
            },
            {
              "keyRaw": "contextKeyShortcuts",
              "value": {
                "fields": [
                  {
                    "collectEntries": "cais:contextKeyShortcut",
                    "key": "cais:contextKeyShortcut/shortcut",
                    "value": "cais:contextKeyShortcut/expanded"
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
