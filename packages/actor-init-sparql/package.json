{
  "name": "@comunica/actor-init-sparql",
  "version": "1.1.0",
  "description": "A Comunica engine for SPARQL query evaluation over heterogeneous interfaces",
  "lsd:module": "https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql",
  "lsd:components": "components/components.jsonld",
  "lsd:contexts": {
    "https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/components/context.jsonld": "components/context.jsonld"
  },
  "lsd:importPaths": {
    "https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/components/": "components/",
    "https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-init-sparql/^1.0.0/config/": "config/"
  },
  "main": "index.js",
  "typings": "index",
  "repository": "https://github.com/comunica/comunica/tree/master/packages/actor-init-sparql",
  "publishConfig": {
    "access": "public"
  },
  "keywords": [
    "comunica",
    "actor",
    "init",
    "sparql"
  ],
  "license": "MIT",
  "bin": {
    "comunica-sparql": "./bin/query.js",
    "comunica-sparql-http": "./bin/http.js",
    "comunica-dynamic-sparql": "./bin/query-dynamic.js"
  },
  "bugs": {
    "url": "https://github.com/comunica/comunica/issues"
  },
  "homepage": "https://github.com/comunica/comunica#readme",
  "files": [
    "components",
    "config",
    "lib/**/*.d.ts",
    "lib/**/*.js",
    "bin/**/*.d.ts",
    "bin/**/*.js",
    "index.d.ts",
    "index.js",
    "index-browser.d.ts",
    "index-browser.js",
    "engine-default.js"
  ],
  "dependencies": {
    "@comunica/actor-abstract-mediatyped": "^1.1.0",
    "@comunica/actor-context-preprocess-rdf-source-identifier": "^1.1.0",
    "@comunica/actor-http-memento": "^1.0.0",
    "@comunica/actor-http-native": "^1.1.0",
    "@comunica/actor-query-operation-ask": "^1.1.0",
    "@comunica/actor-query-operation-bgp-empty": "^1.1.0",
    "@comunica/actor-query-operation-bgp-left-deep-smallest": "^1.1.0",
    "@comunica/actor-query-operation-bgp-single": "^1.1.0",
    "@comunica/actor-query-operation-construct": "^1.1.0",
    "@comunica/actor-query-operation-describe-subject": "^1.1.0",
    "@comunica/actor-query-operation-distinct-hash": "^1.1.0",
    "@comunica/actor-query-operation-filter-direct": "^1.1.0",
    "@comunica/actor-query-operation-from-quad": "^1.1.0",
    "@comunica/actor-query-operation-join": "^1.1.0",
    "@comunica/actor-query-operation-leftjoin-nestedloop": "^1.1.0",
    "@comunica/actor-query-operation-orderby-direct": "^1.1.0",
    "@comunica/actor-query-operation-project": "^1.1.0",
    "@comunica/actor-query-operation-quadpattern": "^1.1.0",
    "@comunica/actor-query-operation-slice": "^1.1.0",
    "@comunica/actor-query-operation-sparql-endpoint": "^1.0.0",
    "@comunica/actor-query-operation-union": "^1.1.0",
    "@comunica/actor-query-operation-values": "^1.1.0",
    "@comunica/actor-rdf-dereference-http-parse": "^1.1.0",
    "@comunica/actor-rdf-dereference-paged-next": "^1.1.0",
    "@comunica/actor-rdf-join-nestedloop": "^1.1.0",
    "@comunica/actor-rdf-metadata-extract-hydra-controls": "^1.1.0",
    "@comunica/actor-rdf-metadata-extract-hydra-count": "^1.1.0",
    "@comunica/actor-rdf-metadata-primary-topic": "^1.1.0",
    "@comunica/actor-rdf-metadata-triple-predicate": "^1.1.0",
    "@comunica/actor-rdf-parse-jsonld": "^1.1.0",
    "@comunica/actor-rdf-parse-n3": "^1.1.0",
    "@comunica/actor-rdf-resolve-quad-pattern-federated": "^1.1.0",
    "@comunica/actor-rdf-resolve-quad-pattern-file": "^1.1.0",
    "@comunica/actor-rdf-resolve-quad-pattern-qpf": "^1.1.0",
    "@comunica/actor-rdf-resolve-quad-pattern-sparql-json": "^1.1.0",
    "@comunica/actor-rdf-serialize-jsonld": "^1.1.0",
    "@comunica/actor-rdf-serialize-n3": "^1.1.0",
    "@comunica/actor-rdf-source-identifier-file-content-type": "^1.1.0",
    "@comunica/actor-rdf-source-identifier-hypermedia-qpf": "^1.1.0",
    "@comunica/actor-rdf-source-identifier-sparql": "^1.1.0",
    "@comunica/actor-sparql-parse-algebra": "^1.1.0",
    "@comunica/actor-sparql-parse-graphql": "^1.0.0",
    "@comunica/actor-sparql-serialize-json": "^1.1.0",
    "@comunica/actor-sparql-serialize-rdf": "^1.1.0",
    "@comunica/actor-sparql-serialize-simple": "^1.1.0",
    "@comunica/actor-sparql-serialize-sparql-json": "^1.1.0",
    "@comunica/actor-sparql-serialize-sparql-xml": "^1.1.0",
    "@comunica/actor-sparql-serialize-stats": "^1.1.0",
    "@comunica/actor-sparql-serialize-table": "^1.1.0",
    "@comunica/actor-sparql-serialize-tree": "^1.0.0",
    "@comunica/bus-context-preprocess": "^1.1.0",
    "@comunica/bus-http": "^1.1.0",
    "@comunica/bus-init": "^1.1.0",
    "@comunica/bus-query-operation": "^1.1.0",
    "@comunica/bus-rdf-dereference": "^1.1.0",
    "@comunica/bus-rdf-dereference-paged": "^1.1.0",
    "@comunica/bus-rdf-join": "^1.1.0",
    "@comunica/bus-rdf-metadata": "^1.1.0",
    "@comunica/bus-rdf-metadata-extract": "^1.1.0",
    "@comunica/bus-rdf-parse": "^1.1.0",
    "@comunica/bus-rdf-resolve-quad-pattern": "^1.1.0",
    "@comunica/bus-rdf-serialize": "^1.1.0",
    "@comunica/bus-rdf-source-identifier": "^1.1.0",
    "@comunica/bus-sparql-parse": "^1.1.0",
    "@comunica/bus-sparql-serialize": "^1.1.0",
    "@comunica/core": "^1.1.0",
    "@comunica/logger-pretty": "^1.0.0",
    "@comunica/logger-void": "^1.0.0",
    "@comunica/mediator-combine-pipeline": "^1.1.0",
    "@comunica/mediator-combine-union": "^1.1.0",
    "@comunica/mediator-number": "^1.1.0",
    "@comunica/mediator-race": "^1.1.0",
    "@comunica/runner": "^1.1.0",
    "@comunica/runner-cli": "^1.1.0",
    "asyncreiterable": "^1.1.0",
    "minimist": "^1.2.0",
    "negotiate": "^1.0.1",
    "rdf-string": "^1.1.1",
    "rdf-terms": "^1.1.0",
    "streamify-string": "^1.0.1"
  },
  "devDependencies": {
    "@comunica/actor-query-operation-bgp-left-deep-smallest-sort": "^1.1.0",
    "@comunica/actor-rdf-resolve-quad-pattern-hdt": "^1.1.0"
  },
  "jest": {
    "transform": {
      "^.+\\.ts$": "<rootDir>/../../node_modules/ts-jest/preprocessor.js"
    },
    "testRegex": "(/test/.*|(\\.|/)(test|spec))\\.ts$",
    "moduleFileExtensions": [
      "ts",
      "js"
    ],
    "collectCoverage": true
  },
  "scripts": {
    "test": "node \"../../node_modules/jest/bin/jest.js\" ${1}",
    "test-watch": "node \"../../node_modules/jest/bin/jest.js\" ${1} --watch",
    "lint": "node \"../../node_modules/tslint/bin/tslint\" lib/**/*.ts test/**/*.ts --exclude '**/*.d.ts'",
    "build": "node \"../../node_modules/typescript/bin/tsc\"",
    "validate": "npm ls",
    "prepare": "comunica-compile-config config/config-default.json > engine-default.js",
    "browser": "npm run prepare && \"../../node_modules/webpack/bin/webpack.js\" --config webpack.config.js --mode production"
  },
  "browser": {
    "./index.js": "./index-browser.js"
  }
}
