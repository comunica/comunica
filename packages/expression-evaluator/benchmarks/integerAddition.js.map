{"version":3,"file":"integerAddition.js","sourceRoot":"","sources":["integerAddition.ts"],"names":[],"mappings":";AAAA,+DAA+D;AAC/D,+BAA+B;;AAE/B,6DAA6D;AAC7D,iEAA6D;AAG7D,6DAA6D;AAC7D,yCAAkC;AAClC,6DAA6D;AAC7D,uCAAuC;AACvC,uDAA+C;AAC/C,qDAA4C;AAC5C,gCAAuC;AACvC,+CAA6C;AAC7C,kDAAgD;AAEhD,MAAM,UAAU,GAAG,IAAI,iBAAK,EAAE,CAAC;AAC/B,MAAM,EAAE,GAAG,IAAI,8BAAW,EAAE,CAAC;AAC7B,MAAM,EAAE,GAAG,IAAI,kCAAe,EAAE,CAAC;AAEjC,SAAS,WAAW,CAAC,GAAW;IAC9B,OAAO,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,SAAS,CAAC,gBAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AACvE,CAAC;AAED,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,gBAAgB,EAAE,GAAG,EAAE;IACrD,MAAM,KAAK,GAAG,IAAA,2BAAS,EAAC,IAAA,kBAAQ,EAAC,cAAc,CAAC,CAAC,CAAC;IAClD,MAAM,SAAS,GAAG,IAAI,mBAAa,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAC5D,MAAM,GAAG,GAAG,GAAG,CAAC;IAChB,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE;QAClC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE;YAClC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC;gBAC7B,CAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,WAAW,CAAC,GAAG,CAAC,CAAE;gBACtC,CAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,WAAW,CAAC,GAAG,CAAC,CAAE;gBACtC,CAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC,CAAE;aAC7C,CAAC,CAAC,CAAC;SACL;KACF;AACH,CAAC,CAAC,CAAC;AAEH,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC3B,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAY,EAAE,EAAE;IACtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE;IACrB,OAAO,CAAC,GAAG,CAAC,uBAAuB,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC","sourcesContent":["// eslint-disable-next-line eslint-comments/disable-enable-pair\n/* eslint-disable no-console */\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { BindingsFactory } from '@comunica/bindings-factory';\nimport type * as RDF from '@rdfjs/types';\nimport type { Event } from 'benchmark';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { Suite } from 'benchmark';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Benchmark from 'benchmark';\nimport { DataFactory } from 'rdf-data-factory';\nimport { translate } from 'sparqlalgebrajs';\nimport { SyncEvaluator } from '../lib';\nimport { TypeURL } from '../lib/util/Consts';\nimport { template } from '../test/util/Aliases';\n\nconst benchSuite = new Suite();\nconst DF = new DataFactory();\nconst BF = new BindingsFactory();\n\nfunction integerTerm(int: number): RDF.Term {\n  return DF.literal(int.toString(), DF.namedNode(TypeURL.XSD_INTEGER));\n}\n\nconst benchmark = new Benchmark('bench addition', () => {\n  const query = translate(template('?a + ?b = ?c'));\n  const evaluator = new SyncEvaluator(query.input.expression);\n  const max = 100;\n  for (let fst = 0; fst < max; fst++) {\n    for (let snd = 0; snd < max; snd++) {\n      evaluator.evaluate(BF.bindings([\n        [ DF.variable('a'), integerTerm(fst) ],\n        [ DF.variable('b'), integerTerm(snd) ],\n        [ DF.variable('c'), integerTerm(fst + snd) ],\n      ]));\n    }\n  }\n});\n\nbenchSuite.push(benchmark);\nbenchSuite.on('cycle', (event: Event) => {\n  console.log(String(event.target));\n}).on('complete', () => {\n  console.log(`Mean execution time ${benchmark.stats.mean}`);\n}).run({ async: true });\n"]}