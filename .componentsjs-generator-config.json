{
  "source": "lib",
  "ignorePackagePaths": [
    "engines/query-sparql",
    "engines/query-sparql-file",
    "engines/query-sparql-rdfjs",
    "packages/actor-init-sparql",
    "packages/actor-init-sparql-file",
    "packages/actor-init-sparql-rdfjs",
    "packages/bindings-factory",
    "packages/context-entries",
    "packages/data-factory",
    "packages/jest",
    "packages/packager",
    "packages/runner-cli"
  ],
  "ignoreComponents": [
    "Error",
    "RegExp",
    "NodeJS.ReadableStream",
    "Headers",
    "IQueryEngine",
    "ActionContext",
    "Map",
    "Readable",
    "EventEmitter",
    "FetchDocumentLoader",
    "BindingsToQuadsIterator",
    "AsyncIteratorJsonBindings",
    "QueryEngineFactory",
    "QueryEngineFactoryBase",
    "bindingsStreamToGraphQl",
    "HttpServiceSparqlEndpoint",
    "IQueryResult",
    "KEY_CONTEXT_INITIALBINDINGS",
    "KEY_CONTEXT_QUERYFORMAT",
    "KEY_CONTEXT_GRAPHQL_SINGULARIZEVARIABLES",
    "KEY_CONTEXT_LENIENT",
    "KEY_CONTEXT_QUERY",
    "IQueryOptions",
    "IMetadata",
    "MetadataBindings",
    "MetadataQuads",
    "Response",
    "RequestInfo",
    "RequestInit",

    "IQueryableResultStream",
    "IQueryableResultBindings",
    "IQueryableResultQuads",
    "IQueryableResultBoolean",
    "IQueryableResultVoid",
    "PathVariableObjectIterator",
    "ClosableTransformIterator",
    "MetadataValidationState",
    "FragmentSelectorShape",
    "ChunkedIterator",
    "IQuerySource",

    "RDF.Stream",
    "Omit",
    "Partial",
    "MediateMediaTyped",
    "IActorDereferenceOutput",
    "Factory",
    "UriTemplate",
    "LRUCache",
    "AggregateEvaluator",
    "ExpressionEvaluator",
    "AggregateEvaluator",

    "TermTransformer",
    "IInternalEvaluator",
    "FunctionApplication",
    "IEvalContext",
    "OverloadTree",
    "prepareEvaluatorActionContext",
    "declare",
    "bool",
    "string",
    "double",
    "integer",
    "dateTime",
    "langString",
    "decimal",
    "float",
    "expressionToVar",
    "ExpressionError",
    "isExpressionError",
    "EmptyAggregateError",
    "RDFEqualTypeError",
    "IncompatibleLanguageOperation",
    "InvalidTimezoneCall",
    "InvalidArgumentTypes",
    "CoalesceError",
    "InError",
    "NoAggregator",
    "UnboundVariableError",
    "CastError",
    "typedLiteral",
    "TypeURL",
    "TypeAlias",
    "SparqlOperator",
    "SparqlOperators",
    "NamedOperator",
    "GeneralOperator",
    "KnownOperator",
    "isSubTypeOf",
    "dayTimeDurationsToSeconds",
    "defaultedDateTimeRepresentation",
    "defaultedDayTimeDurationRepresentation",
    "defaultedDurationRepresentation",
    "defaultedYearMonthDurationRepresentation",
    "extractRawTimeZone",
    "negateDuration",
    "toDateTimeRepresentation",
    "toUTCDate",
    "yearMonthDurationsToMonths",
    "DateTimeLiteral",
    "DayTimeDurationLiteral",
    "DateLiteral",
    "DurationLiteral",
    "TimeLiteral",
    "LangStringLiteral",
    "Term",
    "YearMonthDurationLiteral",
    "Quad",
    "Operator",
    "NamedNode",
    "Variable",
    "NumericLiteral",
    "BooleanLiteral",
    "BlankNode",
    "DecimalLiteral",
    "DefaultGraph",
    "DoubleLiteral",
    "Aggregate",
    "Existence",
    "ExpressionType",
    "Literal",
    "IntegerLiteral",
    "FloatLiteral",
    "NonLexicalLiteral",
    "StringLiteral",
    "TermExpression",
    "VariableExpression",
    "Expression",
    "addDurationToDateTime",
    "elapsedDuration",
    "parseDateTime",
    "parseDayTimeDuration",
    "parseDuration",
    "parseTime",
    "parseYearMonthDuration",
    "parseXSDDecimal",
    "parseXSDFloat",
    "parseXSDInteger",
    "parseDate",
    "trimToYearMonthDuration",
    "trimToDayTimeDuration"
  ],
  "modulePrefix": {
    "@comunica/actor-query-operation-service": "caqoser",
    "@comunica/actor-query-operation-update-clear": "caqoucl",
    "@comunica/actor-query-operation-update-compositeupdate": "caqoucu",
    "@comunica/actor-query-operation-update-deleteinsert": "caqoudi",
    "@comunica/actor-dereference-fallback": "cadf",
    "@comunica/actor-rdf-join-inner-multi-sequential": "carjimse",
    "@comunica/actor-rdf-join-inner-multi-smallest": "carjimsm",
    "@comunica/actor-rdf-join-inner-none": "carjino",
    "@comunica/actor-rdf-join-inner-single": "carjisi",
    "@comunica/actor-rdf-join-inner-symmetrichash": "carjish",
    "@comunica/actor-rdf-metadata-extract-hydra-count": "carmehco",
    "@comunica/actor-query-result-serialize-stats": "caqrsst",
    "@comunica/actor-query-result-serialize-tree": "caqrstr"
  }
}
